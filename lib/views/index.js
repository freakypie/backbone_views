// Generated by CoffeeScript 1.7.1
(function() {
  var Backbone, NunjucksMixin, NunjucksView, SelectorMixin, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Backbone = require("backbone");

  _ = require("underscore");


  /*
  selects items on the property `ui`
   */

  SelectorMixin = (function() {
    function SelectorMixin() {}

    SelectorMixin.prototype.setupUi = function() {
      var name, selector, _ref;
      if (this.ui) {
        _ref = this.ui;
        for (name in _ref) {
          selector = _ref[name];
          this.ui[name] = this.$el.find(selector);
        }
      }
      return this;
    };

    return SelectorMixin;

  })();


  /*
  Renders a nunjucks tempalte
  You can set the template on the class or pass it to the constructor
   */

  NunjucksMixin = (function() {
    function NunjucksMixin() {}

    NunjucksMixin.prototype.renderNunjucksTemplate = function(context) {
      var html;
      if (context == null) {
        context = {};
      }
      if (!this.template.compiled) {
        this.template.compile();
      }
      context = this.getContext(context);
      html = this.template.render(context);
      this.$el.html(html);
      return this;
    };

    return NunjucksMixin;

  })();


  /*
  Renders a nunjucks tempalte
  You can set the template on the class or pass it to the constructor
   */

  NunjucksView = (function(_super) {
    __extends(NunjucksView, _super);

    function NunjucksView() {
      return NunjucksView.__super__.constructor.apply(this, arguments);
    }

    NunjucksView.prototype.initialize = function(options) {
      if (options == null) {
        options = {};
      }
      _.extend(this, NunjucksMixin.prototype);
      _.extend(this, SelectorMixin.prototype);
      if (options.template) {
        return this.template = options.template;
      }
    };

    NunjucksView.prototype.render = function(context) {
      if (context == null) {
        context = {};
      }
      this.renderNunjucksTemplate(context);
      this.setupUI();
      return this;
    };

    return NunjucksView;

  })(Backbone.View);

  module.exports = {
    mixins: {
      nunjucks: NunjucksMixin,
      selector: SelectorMixin
    },
    views: {
      nunjucks: NunjucksView
    }
  };

}).call(this);
